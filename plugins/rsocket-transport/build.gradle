plugins {
    id 'idea'
    id 'java-library'
    id 'com.google.protobuf'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }

    generatedFilesBaseDir = "$projectDir/generated"

    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf'
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                rsocketRpc { }
            }
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        generatedSourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
        generatedSourceDirs += file("${protobuf.generatedFilesBaseDir}/main/rsocketRpc")
    }
}

jar {
    manifest {
        attributes(
                'Plugin-Id': "${project.name}",
                'Plugin-Version': "${project.version}",
        )
    }

    into('lib') {
        from(configurations.runtimeClasspath - configurations.compileOnlyClasspath)
    }
}

dependencies {
    compileOnly 'com.google.auto.service:auto-service'
    annotationProcessor 'com.google.auto.service:auto-service'

    protobuf project(":protocol")

    compileOnly project(":app")

    api 'io.rsocket.rpc:rsocket-rpc-core'
    api 'io.rsocket:rsocket-transport-netty'

    testImplementation project(":app")
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
}
