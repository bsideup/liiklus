plugins {
    id "java"
}

apply plugin: 'org.springframework.boot'

test.testLogging {
    displayGranularity 1
    showStackTraces = true
    exceptionFormat = 'full'
    events "STARTED", "PASSED", "FAILED", "SKIPPED"
}

dependencies {
    compileOnly 'org.projectlombok:lombok'

    compile project(":api")
    compile project(":protocol")

    compile 'org.lognet:grpc-spring-boot-starter'
    compile 'io.grpc:grpc-netty'

    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'io.micrometer:micrometer-registry-prometheus'

    compile 'org.pf4j:pf4j'

    testCompileOnly 'org.projectlombok:lombok'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.testcontainers:kafka'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.awaitility:awaitility'

    testCompile 'io.projectreactor.kafka:reactor-kafka'
}

def plugins = rootProject.allprojects.findAll { it.projectDir.parentFile.name == "plugins" }

tasks.classes.dependsOn(plugins.collect { it.getTasksByName("build", true) })